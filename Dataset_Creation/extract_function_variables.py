# -*- coding: utf-8 -*-
"""Extract_Function_Variables.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j5ai5nJ-mz6Kq5n0OMHuBc6mIbj0zOLQ
"""

!pip install lizard

# Connect to Google Drive
from google.colab import drive

drive.mount('/content/gdrive')

def __analyze_file(file_path, details):
  """Add code complexity information for a file using Lizard.

  Current information includes cyclomatic complexity (ccn),
  avg lines of code and tokens, number of functions and tokens.
  Optionally, the following information can be included for every function:
  ccn, tokens, LOC, lines, name, args, start, end

  :param file_path: file path
  :param details: if True, it returns information about single functions

  :returns  result: dict of the results of the analysis
  """
  result = {}
  analysis = lizard.analyze_file(file_path)

  result['ccn'] = analysis.CCN
  result['avg_ccn'] = analysis.average_cyclomatic_complexity
  result['avg_loc'] = analysis.average_nloc
  result['avg_tokens'] = analysis.average_token_count
  result['num_funs'] = len(analysis.function_list)
  result['loc'] = analysis.nloc
  result['tokens'] = analysis.token_count
  result['ext'] = file_path.split(".")[-1]

  if not details:
    return result

  funs_data = []
  for fun in analysis.function_list:
    fun_data = {'ccn': fun.cyclomatic_complexity,
                'tokens': fun.token_count,
                'loc': fun.nloc,
                'lines': fun.length,
                'name': fun.name,
                'args': fun.parameter_count,
                'start': fun.start_line,
                'end': fun.end_line}
    funs_data.append(fun_data)

  result['funs'] = funs_data
  return result

import pandas as pd

path = '' #@param { type: "string" }
df_pl = pd.read_excel(path)

print(df_pl.shape[0])

print(df_pl.head())

import lizard
function_info_output = pd.DataFrame(columns=['file_path',
                               'ccn',
                               'avg_ccn',
                               'avg_loc',
                               'avg_tokens',
                               'num_funs',
                               'loc',
                               'tokens',
                               'ext',
                               'funs'])
for i in df_pl.index:
  print("index: " + str(i))
  function_info = __analyze_file(df_pl[0][i],True)
  output = [df_pl[0][i],
            function_info['ccn'],
            function_info['avg_ccn'],
            function_info['avg_loc'],
            function_info['avg_tokens'],
            function_info['num_funs'],
            function_info['loc'],
            function_info['tokens'],
            function_info['ext'],
            function_info['funs']]
  function_info_output.loc[len(function_info_output)] = output

print(function_info_output.shape[0])

output_path = '' #@param { type: "string" }
function_info_output.to_excel(output_path)

